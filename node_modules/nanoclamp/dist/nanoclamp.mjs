import{useRef as e,useMemo as t,useCallback as r,useEffect as n,createElement as i}from"react";const l=({accessibility:l=!0,debounce:o=300,ellipsis:s="â€¦",is:u="div",lines:c=3,text:d,...v})=>{const a=e(null),f=e("."),m={ref:a,...l?{title:d}:{},...v},g=t((()=>"string"==typeof d&&d.length>0),[d]),h=r((()=>{if(!g)return;const e=e=>{f.current=e,null!=a.current&&(a.current.textContent=e)},t=()=>{var e,t;return null!==(t=null===(e=a.current)||void 0===e?void 0:e.clientHeight)&&void 0!==t?t:0};e(".");const r=(t()+1)*c+1;if(e(d),t()<=r)return;let n=0,i=0,l=d.length;for(;n<=l;){i=Math.floor((n+l)/2);e(d.slice(0,i).trim()+s),t()<=r?n=i+1:l=i-1}e(d.slice(0,i-1).trim()+s)}),[s,g,c,d]);return n((()=>{h();const e=((e,t)=>{let r;const n=()=>{r=void 0,e()};return()=>{const i=null==r;clearTimeout(r),r=setTimeout(n,t),i&&e()}})(h,o);return window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)}),[h,o]),g?i(u,m,f.current):null};export{l as default};
//# sourceMappingURL=nanoclamp.mjs.map
