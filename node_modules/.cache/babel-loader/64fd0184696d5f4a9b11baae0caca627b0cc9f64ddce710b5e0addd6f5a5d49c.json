{"ast":null,"code":"function getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var f = n.default;\n  if (typeof f == \"function\") {\n    var a = function a() {\n      if (this instanceof a) {\n        return Reflect.construct(f, arguments, this.constructor);\n      }\n      return f.apply(this, arguments);\n    };\n    a.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, '__esModule', {\n    value: true\n  });\n  Object.keys(n).forEach(function (k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function () {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\nvar lightweight$2 = {\n  exports: {}\n};\nconst REGEX_HTTP_PROTOCOL = /^https?:\\/\\//i;\nvar lightweight$1 = url => {\n  try {\n    const {\n      href\n    } = new URL(url);\n    return REGEX_HTTP_PROTOCOL.test(href) && href;\n  } catch (err) {\n    return false;\n  }\n};\nvar dist = {};\nfunction iter(output, nullish, sep, val, key) {\n  var k,\n    pfx = key ? key + sep : key;\n  if (val == null) {\n    if (nullish) output[key] = val;\n  } else if (typeof val != 'object') {\n    output[key] = val;\n  } else if (Array.isArray(val)) {\n    for (k = 0; k < val.length; k++) {\n      iter(output, nullish, sep, val[k], pfx + k);\n    }\n  } else {\n    for (k in val) {\n      iter(output, nullish, sep, val[k], pfx + k);\n    }\n  }\n}\nfunction flattie(input, glue, toNull) {\n  var output = {};\n  if (typeof input == 'object') {\n    iter(output, !!toNull, glue || '.', input, '');\n  }\n  return output;\n}\ndist.flattie = flattie;\n\n// eslint-lint-disable-next-line @typescript-eslint/naming-convention\nclass HTTPError extends Error {\n  constructor(response, request, options) {\n    const code = response.status || response.status === 0 ? response.status : '';\n    const title = response.statusText || '';\n    const status = `${code} ${title}`.trim();\n    const reason = status ? `status code ${status}` : 'an unknown error';\n    super(`Request failed with ${reason}`);\n    Object.defineProperty(this, \"response\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"request\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"options\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.name = 'HTTPError';\n    this.response = response;\n    this.request = request;\n    this.options = options;\n  }\n}\nclass TimeoutError extends Error {\n  constructor(request) {\n    super('Request timed out');\n    Object.defineProperty(this, \"request\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.name = 'TimeoutError';\n    this.request = request;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst isObject$1 = value => value !== null && typeof value === 'object';\nconst validateAndMerge = (...sources) => {\n  for (const source of sources) {\n    if ((!isObject$1(source) || Array.isArray(source)) && source !== undefined) {\n      throw new TypeError('The `options` argument must be an object');\n    }\n  }\n  return deepMerge({}, ...sources);\n};\nconst mergeHeaders = (source1 = {}, source2 = {}) => {\n  const result = new globalThis.Headers(source1);\n  const isHeadersInstance = source2 instanceof globalThis.Headers;\n  const source = new globalThis.Headers(source2);\n  for (const [key, value] of source.entries()) {\n    if (isHeadersInstance && value === 'undefined' || value === undefined) {\n      result.delete(key);\n    } else {\n      result.set(key, value);\n    }\n  }\n  return result;\n};\n// TODO: Make this strongly-typed (no `any`).\nconst deepMerge = (...sources) => {\n  let returnValue = {};\n  let headers = {};\n  for (const source of sources) {\n    if (Array.isArray(source)) {\n      if (!Array.isArray(returnValue)) {\n        returnValue = [];\n      }\n      returnValue = [...returnValue, ...source];\n    } else if (isObject$1(source)) {\n      for (let [key, value] of Object.entries(source)) {\n        if (isObject$1(value) && key in returnValue) {\n          value = deepMerge(returnValue[key], value);\n        }\n        returnValue = {\n          ...returnValue,\n          [key]: value\n        };\n      }\n      if (isObject$1(source.headers)) {\n        headers = mergeHeaders(headers, source.headers);\n        returnValue.headers = headers;\n      }\n    }\n  }\n  return returnValue;\n};\nconst supportsRequestStreams = (() => {\n  let duplexAccessed = false;\n  let hasContentType = false;\n  const supportsReadableStream = typeof globalThis.ReadableStream === 'function';\n  const supportsRequest = typeof globalThis.Request === 'function';\n  if (supportsReadableStream && supportsRequest) {\n    hasContentType = new globalThis.Request('https://empty.invalid', {\n      body: new globalThis.ReadableStream(),\n      method: 'POST',\n      // @ts-expect-error - Types are outdated.\n      get duplex() {\n        duplexAccessed = true;\n        return 'half';\n      }\n    }).headers.has('Content-Type');\n  }\n  return duplexAccessed && !hasContentType;\n})();\nconst supportsAbortController = typeof globalThis.AbortController === 'function';\nconst supportsResponseStreams = typeof globalThis.ReadableStream === 'function';\nconst supportsFormData = typeof globalThis.FormData === 'function';\nconst requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'];\nconst responseTypes = {\n  json: 'application/json',\n  text: 'text/*',\n  formData: 'multipart/form-data',\n  arrayBuffer: '*/*',\n  blob: '*/*'\n};\n// The maximum value of a 32bit int (see issue #117)\nconst maxSafeTimeout = 2_147_483_647;\nconst stop = Symbol('stop');\nconst kyOptionKeys = {\n  json: true,\n  parseJson: true,\n  searchParams: true,\n  prefixUrl: true,\n  retry: true,\n  timeout: true,\n  hooks: true,\n  throwHttpErrors: true,\n  onDownloadProgress: true,\n  fetch: true\n};\nconst requestOptionsRegistry = {\n  method: true,\n  headers: true,\n  body: true,\n  mode: true,\n  credentials: true,\n  cache: true,\n  redirect: true,\n  referrer: true,\n  referrerPolicy: true,\n  integrity: true,\n  keepalive: true,\n  signal: true,\n  window: true,\n  dispatcher: true,\n  duplex: true,\n  priority: true\n};\nconst normalizeRequestMethod = input => requestMethods.includes(input) ? input.toUpperCase() : input;\nconst retryMethods = ['get', 'put', 'head', 'delete', 'options', 'trace'];\nconst retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];\nconst retryAfterStatusCodes = [413, 429, 503];\nconst defaultRetryOptions = {\n  limit: 2,\n  methods: retryMethods,\n  statusCodes: retryStatusCodes,\n  afterStatusCodes: retryAfterStatusCodes,\n  maxRetryAfter: Number.POSITIVE_INFINITY,\n  backoffLimit: Number.POSITIVE_INFINITY,\n  delay: attemptCount => 0.3 * 2 ** (attemptCount - 1) * 1000\n};\nconst normalizeRetryOptions = (retry = {}) => {\n  if (typeof retry === 'number') {\n    return {\n      ...defaultRetryOptions,\n      limit: retry\n    };\n  }\n  if (retry.methods && !Array.isArray(retry.methods)) {\n    throw new Error('retry.methods must be an array');\n  }\n  if (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n    throw new Error('retry.statusCodes must be an array');\n  }\n  return {\n    ...defaultRetryOptions,\n    ...retry,\n    afterStatusCodes: retryAfterStatusCodes\n  };\n};\n\n// `Promise.race()` workaround (#91)\nasync function timeout(request, init, abortController, options) {\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      if (abortController) {\n        abortController.abort();\n      }\n      reject(new TimeoutError(request));\n    }, options.timeout);\n    void options.fetch(request, init).then(resolve).catch(reject).then(() => {\n      clearTimeout(timeoutId);\n    });\n  });\n}\n\n// https://github.com/sindresorhus/delay/tree/ab98ae8dfcb38e1593286c94d934e70d14a4e111\nasync function delay(ms, {\n  signal\n}) {\n  return new Promise((resolve, reject) => {\n    if (signal) {\n      signal.throwIfAborted();\n      signal.addEventListener('abort', abortHandler, {\n        once: true\n      });\n    }\n    function abortHandler() {\n      clearTimeout(timeoutId);\n      reject(signal.reason);\n    }\n    const timeoutId = setTimeout(() => {\n      signal?.removeEventListener('abort', abortHandler);\n      resolve();\n    }, ms);\n  });\n}\nconst findUnknownOptions = (request, options) => {\n  const unknownOptions = {};\n  for (const key in options) {\n    if (!(key in requestOptionsRegistry) && !(key in kyOptionKeys) && !(key in request)) {\n      unknownOptions[key] = options[key];\n    }\n  }\n  return unknownOptions;\n};\nclass Ky {\n  static create(input, options) {\n    const ky = new Ky(input, options);\n    const function_ = async () => {\n      if (typeof ky._options.timeout === 'number' && ky._options.timeout > maxSafeTimeout) {\n        throw new RangeError(`The \\`timeout\\` option cannot be greater than ${maxSafeTimeout}`);\n      }\n      // Delay the fetch so that body method shortcuts can set the Accept header\n      await Promise.resolve();\n      let response = await ky._fetch();\n      for (const hook of ky._options.hooks.afterResponse) {\n        // eslint-disable-next-line no-await-in-loop\n        const modifiedResponse = await hook(ky.request, ky._options, ky._decorateResponse(response.clone()));\n        if (modifiedResponse instanceof globalThis.Response) {\n          response = modifiedResponse;\n        }\n      }\n      ky._decorateResponse(response);\n      if (!response.ok && ky._options.throwHttpErrors) {\n        let error = new HTTPError(response, ky.request, ky._options);\n        for (const hook of ky._options.hooks.beforeError) {\n          // eslint-disable-next-line no-await-in-loop\n          error = await hook(error);\n        }\n        throw error;\n      }\n      // If `onDownloadProgress` is passed, it uses the stream API internally\n      /* istanbul ignore next */\n      if (ky._options.onDownloadProgress) {\n        if (typeof ky._options.onDownloadProgress !== 'function') {\n          throw new TypeError('The `onDownloadProgress` option must be a function');\n        }\n        if (!supportsResponseStreams) {\n          throw new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n        }\n        return ky._stream(response.clone(), ky._options.onDownloadProgress);\n      }\n      return response;\n    };\n    const isRetriableMethod = ky._options.retry.methods.includes(ky.request.method.toLowerCase());\n    const result = isRetriableMethod ? ky._retry(function_) : function_();\n    for (const [type, mimeType] of Object.entries(responseTypes)) {\n      result[type] = async () => {\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        ky.request.headers.set('accept', ky.request.headers.get('accept') || mimeType);\n        const awaitedResult = await result;\n        const response = awaitedResult.clone();\n        if (type === 'json') {\n          if (response.status === 204) {\n            return '';\n          }\n          const arrayBuffer = await response.clone().arrayBuffer();\n          const responseSize = arrayBuffer.byteLength;\n          if (responseSize === 0) {\n            return '';\n          }\n          if (options.parseJson) {\n            return options.parseJson(await response.text());\n          }\n        }\n        return response[type]();\n      };\n    }\n    return result;\n  }\n  // eslint-disable-next-line complexity\n  constructor(input, options = {}) {\n    Object.defineProperty(this, \"request\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"abortController\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_retryCount\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_input\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_options\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._input = input;\n    const credentials = this._input instanceof Request && 'credentials' in Request.prototype ? this._input.credentials : undefined;\n    this._options = {\n      ...(credentials && {\n        credentials\n      }),\n      // For exactOptionalPropertyTypes\n      ...options,\n      headers: mergeHeaders(this._input.headers, options.headers),\n      hooks: deepMerge({\n        beforeRequest: [],\n        beforeRetry: [],\n        beforeError: [],\n        afterResponse: []\n      }, options.hooks),\n      method: normalizeRequestMethod(options.method ?? this._input.method),\n      // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n      prefixUrl: String(options.prefixUrl || ''),\n      retry: normalizeRetryOptions(options.retry),\n      throwHttpErrors: options.throwHttpErrors !== false,\n      timeout: options.timeout ?? 10_000,\n      fetch: options.fetch ?? globalThis.fetch.bind(globalThis)\n    };\n    if (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {\n      throw new TypeError('`input` must be a string, URL, or Request');\n    }\n    if (this._options.prefixUrl && typeof this._input === 'string') {\n      if (this._input.startsWith('/')) {\n        throw new Error('`input` must not begin with a slash when using `prefixUrl`');\n      }\n      if (!this._options.prefixUrl.endsWith('/')) {\n        this._options.prefixUrl += '/';\n      }\n      this._input = this._options.prefixUrl + this._input;\n    }\n    if (supportsAbortController) {\n      this.abortController = new globalThis.AbortController();\n      if (this._options.signal) {\n        const originalSignal = this._options.signal;\n        this._options.signal.addEventListener('abort', () => {\n          this.abortController.abort(originalSignal.reason);\n        });\n      }\n      this._options.signal = this.abortController.signal;\n    }\n    if (supportsRequestStreams) {\n      // @ts-expect-error - Types are outdated.\n      this._options.duplex = 'half';\n    }\n    this.request = new globalThis.Request(this._input, this._options);\n    if (this._options.searchParams) {\n      // eslint-disable-next-line unicorn/prevent-abbreviations\n      const textSearchParams = typeof this._options.searchParams === 'string' ? this._options.searchParams.replace(/^\\?/, '') : new URLSearchParams(this._options.searchParams).toString();\n      // eslint-disable-next-line unicorn/prevent-abbreviations\n      const searchParams = '?' + textSearchParams;\n      const url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n      // To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n      if ((supportsFormData && this._options.body instanceof globalThis.FormData || this._options.body instanceof URLSearchParams) && !(this._options.headers && this._options.headers['content-type'])) {\n        this.request.headers.delete('content-type');\n      }\n      // The spread of `this.request` is required as otherwise it misses the `duplex` option for some reason and throws.\n      this.request = new globalThis.Request(new globalThis.Request(url, {\n        ...this.request\n      }), this._options);\n    }\n    if (this._options.json !== undefined) {\n      this._options.body = JSON.stringify(this._options.json);\n      this.request.headers.set('content-type', this._options.headers.get('content-type') ?? 'application/json');\n      this.request = new globalThis.Request(this.request, {\n        body: this._options.body\n      });\n    }\n  }\n  _calculateRetryDelay(error) {\n    this._retryCount++;\n    if (this._retryCount <= this._options.retry.limit && !(error instanceof TimeoutError)) {\n      if (error instanceof HTTPError) {\n        if (!this._options.retry.statusCodes.includes(error.response.status)) {\n          return 0;\n        }\n        const retryAfter = error.response.headers.get('Retry-After');\n        if (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n          let after = Number(retryAfter);\n          if (Number.isNaN(after)) {\n            after = Date.parse(retryAfter) - Date.now();\n          } else {\n            after *= 1000;\n          }\n          if (this._options.retry.maxRetryAfter !== undefined && after > this._options.retry.maxRetryAfter) {\n            return 0;\n          }\n          return after;\n        }\n        if (error.response.status === 413) {\n          return 0;\n        }\n      }\n      const retryDelay = this._options.retry.delay(this._retryCount);\n      return Math.min(this._options.retry.backoffLimit, retryDelay);\n    }\n    return 0;\n  }\n  _decorateResponse(response) {\n    if (this._options.parseJson) {\n      response.json = async () => this._options.parseJson(await response.text());\n    }\n    return response;\n  }\n  async _retry(function_) {\n    try {\n      return await function_();\n    } catch (error) {\n      const ms = Math.min(this._calculateRetryDelay(error), maxSafeTimeout);\n      if (ms !== 0 && this._retryCount > 0) {\n        await delay(ms, {\n          signal: this._options.signal\n        });\n        for (const hook of this._options.hooks.beforeRetry) {\n          // eslint-disable-next-line no-await-in-loop\n          const hookResult = await hook({\n            request: this.request,\n            options: this._options,\n            error: error,\n            retryCount: this._retryCount\n          });\n          // If `stop` is returned from the hook, the retry process is stopped\n          if (hookResult === stop) {\n            return;\n          }\n        }\n        return this._retry(function_);\n      }\n      throw error;\n    }\n  }\n  async _fetch() {\n    for (const hook of this._options.hooks.beforeRequest) {\n      // eslint-disable-next-line no-await-in-loop\n      const result = await hook(this.request, this._options);\n      if (result instanceof Request) {\n        this.request = result;\n        break;\n      }\n      if (result instanceof Response) {\n        return result;\n      }\n    }\n    const nonRequestOptions = findUnknownOptions(this.request, this._options);\n    if (this._options.timeout === false) {\n      return this._options.fetch(this.request.clone(), nonRequestOptions);\n    }\n    return timeout(this.request.clone(), nonRequestOptions, this.abortController, this._options);\n  }\n  /* istanbul ignore next */\n  _stream(response, onDownloadProgress) {\n    const totalBytes = Number(response.headers.get('content-length')) || 0;\n    let transferredBytes = 0;\n    if (response.status === 204) {\n      if (onDownloadProgress) {\n        onDownloadProgress({\n          percent: 1,\n          totalBytes,\n          transferredBytes\n        }, new Uint8Array());\n      }\n      return new globalThis.Response(null, {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers\n      });\n    }\n    return new globalThis.Response(new globalThis.ReadableStream({\n      async start(controller) {\n        const reader = response.body.getReader();\n        if (onDownloadProgress) {\n          onDownloadProgress({\n            percent: 0,\n            transferredBytes: 0,\n            totalBytes\n          }, new Uint8Array());\n        }\n        async function read() {\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) {\n            controller.close();\n            return;\n          }\n          if (onDownloadProgress) {\n            transferredBytes += value.byteLength;\n            const percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n            onDownloadProgress({\n              percent,\n              transferredBytes,\n              totalBytes\n            }, value);\n          }\n          controller.enqueue(value);\n          await read();\n        }\n        await read();\n      }\n    }), {\n      status: response.status,\n      statusText: response.statusText,\n      headers: response.headers\n    });\n  }\n}\n\n/*! MIT License © Sindre Sorhus */\nconst createInstance = defaults => {\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  const ky = (input, options) => Ky.create(input, validateAndMerge(defaults, options));\n  for (const method of requestMethods) {\n    // eslint-disable-next-line @typescript-eslint/promise-function-async\n    ky[method] = (input, options) => Ky.create(input, validateAndMerge(defaults, options, {\n      method\n    }));\n  }\n  ky.create = newDefaults => createInstance(validateAndMerge(newDefaults));\n  ky.extend = newDefaults => createInstance(validateAndMerge(defaults, newDefaults));\n  ky.stop = stop;\n  return ky;\n};\nconst ky$1 = createInstance();\nvar distribution = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  HTTPError: HTTPError,\n  TimeoutError: TimeoutError,\n  default: ky$1\n});\nvar require$$2 = /*@__PURE__*/getAugmentedNamespace(distribution);\nconst ENDPOINT = {\n  FREE: 'https://api.microlink.io/',\n  PRO: 'https://pro.microlink.io/'\n};\nconst isObject = input => input !== null && typeof input === 'object';\nconst isBuffer = input => input != null && input.constructor != null && typeof input.constructor.isBuffer === 'function' && input.constructor.isBuffer(input);\nconst parseBody = (input, error, url) => {\n  try {\n    return JSON.parse(input);\n  } catch (_) {\n    const message = input || error.message;\n    return {\n      status: 'error',\n      data: {\n        url: message\n      },\n      more: 'https://microlink.io/efatalclient',\n      code: 'EFATALCLIENT',\n      message,\n      url\n    };\n  }\n};\nconst factory$1 = streamResponseType => ({\n  VERSION,\n  MicrolinkError,\n  urlHttp,\n  got,\n  flatten\n}) => {\n  const assertUrl = (url = '') => {\n    if (!urlHttp(url)) {\n      const message = `The \\`url\\` as \\`${url}\\` is not valid. Ensure it has protocol (http or https) and hostname.`;\n      throw new MicrolinkError({\n        status: 'fail',\n        data: {\n          url: message\n        },\n        more: 'https://microlink.io/einvalurlclient',\n        code: 'EINVALURLCLIENT',\n        message,\n        url\n      });\n    }\n  };\n  const mapRules = rules => {\n    if (!isObject(rules)) return;\n    const flatRules = flatten(rules);\n    return Object.keys(flatRules).reduce((acc, key) => {\n      acc[`data.${key}`] = flatRules[key].toString();\n      return acc;\n    }, {});\n  };\n  const fetchFromApi = async (apiUrl, opts = {}) => {\n    try {\n      const response = await got(apiUrl, opts);\n      return opts.responseType === streamResponseType ? response : {\n        ...response.body,\n        response\n      };\n    } catch (error) {\n      const {\n        response = {}\n      } = error;\n      const {\n        statusCode,\n        body: rawBody,\n        headers = {},\n        url: uri = apiUrl\n      } = response;\n      const isBodyBuffer = isBuffer(rawBody);\n      const body = isObject(rawBody) && !isBodyBuffer ? rawBody : parseBody(isBodyBuffer ? rawBody.toString() : rawBody, error, uri);\n      throw new MicrolinkError({\n        ...body,\n        message: body.message,\n        url: uri,\n        statusCode,\n        headers\n      });\n    }\n  };\n  const getApiUrl = (url, {\n    data,\n    apiKey,\n    endpoint,\n    retry,\n    cache,\n    ...opts\n  } = {}, {\n    responseType = 'json',\n    headers: gotHeaders,\n    ...gotOpts\n  } = {}) => {\n    const isPro = !!apiKey;\n    const apiEndpoint = endpoint || ENDPOINT[isPro ? 'PRO' : 'FREE'];\n    const apiUrl = `${apiEndpoint}?${new URLSearchParams({\n      url,\n      ...mapRules(data),\n      ...flatten(opts)\n    }).toString()}`;\n    const headers = isPro ? {\n      ...gotHeaders,\n      'x-api-key': apiKey\n    } : {\n      ...gotHeaders\n    };\n    if (opts.stream) {\n      responseType = streamResponseType;\n    }\n    return [apiUrl, {\n      ...gotOpts,\n      responseType,\n      cache,\n      retry,\n      headers\n    }];\n  };\n  const createMql = defaultOpts => async (url, opts, gotOpts) => {\n    assertUrl(url);\n    const [apiUrl, fetchOpts] = getApiUrl(url, opts, {\n      ...defaultOpts,\n      ...gotOpts\n    });\n    return fetchFromApi(apiUrl, fetchOpts);\n  };\n  const mql = createMql();\n  mql.extend = createMql;\n  mql.MicrolinkError = MicrolinkError;\n  mql.getApiUrl = getApiUrl;\n  mql.fetchFromApi = fetchFromApi;\n  mql.mapRules = mapRules;\n  mql.version = VERSION;\n  mql.stream = got.stream;\n  return mql;\n};\nvar factory_1 = factory$1;\nconst urlHttp = lightweight$1;\nconst {\n  flattie: flatten\n} = dist;\nconst {\n  default: ky\n} = require$$2;\nconst factory = factory_1('arrayBuffer');\nclass MicrolinkError extends Error {\n  constructor(props) {\n    super();\n    this.name = 'MicrolinkError';\n    Object.assign(this, props);\n    this.description = this.message;\n    this.message = this.code ? `${this.code}, ${this.description}` : this.description;\n  }\n}\nconst got = async (url, {\n  responseType,\n  ...opts\n}) => {\n  try {\n    if (opts.timeout === undefined) opts.timeout = false;\n    const response = await ky(url, opts);\n    const body = await response[responseType]();\n    const {\n      headers,\n      status: statusCode\n    } = response;\n    return {\n      url: response.url,\n      body,\n      headers,\n      statusCode\n    };\n  } catch (error) {\n    if (error.response) {\n      const {\n        response\n      } = error;\n      error.response = {\n        ...response,\n        headers: Array.from(response.headers.entries()).reduce((acc, [key, value]) => {\n          acc[key] = value;\n          return acc;\n        }, {}),\n        statusCode: response.status,\n        body: await response.text()\n      };\n    }\n    throw error;\n  }\n};\ngot.stream = (...args) => ky(...args).then(res => res.body);\nconst mql = factory({\n  MicrolinkError,\n  urlHttp,\n  got,\n  flatten,\n  VERSION: '0.13.6'\n});\nlightweight$2.exports = mql;\nvar arrayBuffer = lightweight$2.exports.arrayBuffer = mql.extend({\n  responseType: 'arrayBuffer'\n});\nvar extend = lightweight$2.exports.extend = mql.extend;\nvar fetchFromApi = lightweight$2.exports.fetchFromApi = mql.fetchFromApi;\nvar getApiUrl = lightweight$2.exports.getApiUrl = mql.getApiUrl;\nvar mapRules = lightweight$2.exports.mapRules = mql.mapRules;\nvar MicrolinkError_1 = lightweight$2.exports.MicrolinkError = mql.MicrolinkError;\nvar version = lightweight$2.exports.version = mql.version;\nvar lightweightExports = lightweight$2.exports;\nvar lightweight = /*@__PURE__*/getDefaultExportFromCjs(lightweightExports);\nexport { MicrolinkError_1 as MicrolinkError, arrayBuffer, lightweight as default, extend, fetchFromApi, getApiUrl, mapRules, version };","map":{"version":3,"names":["getDefaultExportFromCjs","x","__esModule","Object","prototype","hasOwnProperty","call","getAugmentedNamespace","n","f","default","a","Reflect","construct","arguments","constructor","apply","defineProperty","value","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","lightweight$2","exports","REGEX_HTTP_PROTOCOL","lightweight$1","url","href","URL","test","err","dist","iter","output","nullish","sep","val","key","pfx","Array","isArray","length","flattie","input","glue","toNull","HTTPError","Error","response","request","options","code","status","title","statusText","trim","reason","configurable","writable","name","TimeoutError","isObject$1","validateAndMerge","sources","source","undefined","TypeError","deepMerge","mergeHeaders","source1","source2","result","globalThis","Headers","isHeadersInstance","entries","delete","set","returnValue","headers","supportsRequestStreams","duplexAccessed","hasContentType","supportsReadableStream","ReadableStream","supportsRequest","Request","body","method","duplex","has","supportsAbortController","AbortController","supportsResponseStreams","supportsFormData","FormData","requestMethods","responseTypes","json","text","formData","arrayBuffer","blob","maxSafeTimeout","stop","Symbol","kyOptionKeys","parseJson","searchParams","prefixUrl","retry","timeout","hooks","throwHttpErrors","onDownloadProgress","fetch","requestOptionsRegistry","mode","credentials","cache","redirect","referrer","referrerPolicy","integrity","keepalive","signal","window","dispatcher","priority","normalizeRequestMethod","includes","toUpperCase","retryMethods","retryStatusCodes","retryAfterStatusCodes","defaultRetryOptions","limit","methods","statusCodes","afterStatusCodes","maxRetryAfter","Number","POSITIVE_INFINITY","backoffLimit","delay","attemptCount","normalizeRetryOptions","init","abortController","Promise","resolve","reject","timeoutId","setTimeout","abort","then","catch","clearTimeout","ms","throwIfAborted","addEventListener","abortHandler","once","removeEventListener","findUnknownOptions","unknownOptions","Ky","create","ky","function_","_options","RangeError","_fetch","hook","afterResponse","modifiedResponse","_decorateResponse","clone","Response","ok","error","beforeError","_stream","isRetriableMethod","toLowerCase","_retry","type","mimeType","awaitedResult","responseSize","byteLength","_input","beforeRequest","beforeRetry","String","bind","startsWith","endsWith","originalSignal","textSearchParams","replace","URLSearchParams","toString","JSON","stringify","_calculateRetryDelay","_retryCount","retryAfter","after","isNaN","Date","parse","now","retryDelay","Math","min","hookResult","retryCount","nonRequestOptions","totalBytes","transferredBytes","percent","Uint8Array","start","controller","reader","getReader","read","done","close","enqueue","createInstance","defaults","newDefaults","extend","ky$1","distribution","freeze","__proto__","require$$2","ENDPOINT","FREE","PRO","isObject","isBuffer","parseBody","_","message","data","more","factory$1","streamResponseType","VERSION","MicrolinkError","urlHttp","got","flatten","assertUrl","mapRules","rules","flatRules","reduce","acc","fetchFromApi","apiUrl","opts","responseType","statusCode","rawBody","uri","isBodyBuffer","getApiUrl","apiKey","endpoint","gotHeaders","gotOpts","isPro","apiEndpoint","stream","createMql","defaultOpts","fetchOpts","mql","version","factory_1","factory","props","assign","description","from","args","res","MicrolinkError_1","lightweightExports","lightweight"],"sources":["C:/Users/vkotr/reactfolio/node_modules/@microlink/mql/lightweight/index.js"],"sourcesContent":["function getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var f = n.default;\n\tif (typeof f == \"function\") {\n\t\tvar a = function a () {\n\t\t\tif (this instanceof a) {\n        return Reflect.construct(f, arguments, this.constructor);\n\t\t\t}\n\t\t\treturn f.apply(this, arguments);\n\t\t};\n\t\ta.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nvar lightweight$2 = {exports: {}};\n\nconst REGEX_HTTP_PROTOCOL = /^https?:\\/\\//i;\n\nvar lightweight$1 = url => {\n  try {\n    const { href } = new URL(url);\n    return REGEX_HTTP_PROTOCOL.test(href) && href\n  } catch (err) {\n    return false\n  }\n};\n\nvar dist = {};\n\nfunction iter(output, nullish, sep, val, key) {\n\tvar k, pfx = key ? (key + sep) : key;\n\n\tif (val == null) {\n\t\tif (nullish) output[key] = val;\n\t} else if (typeof val != 'object') {\n\t\toutput[key] = val;\n\t} else if (Array.isArray(val)) {\n\t\tfor (k=0; k < val.length; k++) {\n\t\t\titer(output, nullish, sep, val[k], pfx + k);\n\t\t}\n\t} else {\n\t\tfor (k in val) {\n\t\t\titer(output, nullish, sep, val[k], pfx + k);\n\t\t}\n\t}\n}\n\nfunction flattie(input, glue, toNull) {\n\tvar output = {};\n\tif (typeof input == 'object') {\n\t\titer(output, !!toNull, glue || '.', input, '');\n\t}\n\treturn output;\n}\n\ndist.flattie = flattie;\n\n// eslint-lint-disable-next-line @typescript-eslint/naming-convention\nclass HTTPError extends Error {\n    constructor(response, request, options) {\n        const code = (response.status || response.status === 0) ? response.status : '';\n        const title = response.statusText || '';\n        const status = `${code} ${title}`.trim();\n        const reason = status ? `status code ${status}` : 'an unknown error';\n        super(`Request failed with ${reason}`);\n        Object.defineProperty(this, \"response\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"request\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = 'HTTPError';\n        this.response = response;\n        this.request = request;\n        this.options = options;\n    }\n}\n\nclass TimeoutError extends Error {\n    constructor(request) {\n        super('Request timed out');\n        Object.defineProperty(this, \"request\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = 'TimeoutError';\n        this.request = request;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst isObject$1 = (value) => value !== null && typeof value === 'object';\n\nconst validateAndMerge = (...sources) => {\n    for (const source of sources) {\n        if ((!isObject$1(source) || Array.isArray(source)) && source !== undefined) {\n            throw new TypeError('The `options` argument must be an object');\n        }\n    }\n    return deepMerge({}, ...sources);\n};\nconst mergeHeaders = (source1 = {}, source2 = {}) => {\n    const result = new globalThis.Headers(source1);\n    const isHeadersInstance = source2 instanceof globalThis.Headers;\n    const source = new globalThis.Headers(source2);\n    for (const [key, value] of source.entries()) {\n        if ((isHeadersInstance && value === 'undefined') || value === undefined) {\n            result.delete(key);\n        }\n        else {\n            result.set(key, value);\n        }\n    }\n    return result;\n};\n// TODO: Make this strongly-typed (no `any`).\nconst deepMerge = (...sources) => {\n    let returnValue = {};\n    let headers = {};\n    for (const source of sources) {\n        if (Array.isArray(source)) {\n            if (!Array.isArray(returnValue)) {\n                returnValue = [];\n            }\n            returnValue = [...returnValue, ...source];\n        }\n        else if (isObject$1(source)) {\n            for (let [key, value] of Object.entries(source)) {\n                if (isObject$1(value) && key in returnValue) {\n                    value = deepMerge(returnValue[key], value);\n                }\n                returnValue = { ...returnValue, [key]: value };\n            }\n            if (isObject$1(source.headers)) {\n                headers = mergeHeaders(headers, source.headers);\n                returnValue.headers = headers;\n            }\n        }\n    }\n    return returnValue;\n};\n\nconst supportsRequestStreams = (() => {\n    let duplexAccessed = false;\n    let hasContentType = false;\n    const supportsReadableStream = typeof globalThis.ReadableStream === 'function';\n    const supportsRequest = typeof globalThis.Request === 'function';\n    if (supportsReadableStream && supportsRequest) {\n        hasContentType = new globalThis.Request('https://empty.invalid', {\n            body: new globalThis.ReadableStream(),\n            method: 'POST',\n            // @ts-expect-error - Types are outdated.\n            get duplex() {\n                duplexAccessed = true;\n                return 'half';\n            },\n        }).headers.has('Content-Type');\n    }\n    return duplexAccessed && !hasContentType;\n})();\nconst supportsAbortController = typeof globalThis.AbortController === 'function';\nconst supportsResponseStreams = typeof globalThis.ReadableStream === 'function';\nconst supportsFormData = typeof globalThis.FormData === 'function';\nconst requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'];\nconst responseTypes = {\n    json: 'application/json',\n    text: 'text/*',\n    formData: 'multipart/form-data',\n    arrayBuffer: '*/*',\n    blob: '*/*',\n};\n// The maximum value of a 32bit int (see issue #117)\nconst maxSafeTimeout = 2_147_483_647;\nconst stop = Symbol('stop');\nconst kyOptionKeys = {\n    json: true,\n    parseJson: true,\n    searchParams: true,\n    prefixUrl: true,\n    retry: true,\n    timeout: true,\n    hooks: true,\n    throwHttpErrors: true,\n    onDownloadProgress: true,\n    fetch: true,\n};\nconst requestOptionsRegistry = {\n    method: true,\n    headers: true,\n    body: true,\n    mode: true,\n    credentials: true,\n    cache: true,\n    redirect: true,\n    referrer: true,\n    referrerPolicy: true,\n    integrity: true,\n    keepalive: true,\n    signal: true,\n    window: true,\n    dispatcher: true,\n    duplex: true,\n    priority: true,\n};\n\nconst normalizeRequestMethod = (input) => requestMethods.includes(input) ? input.toUpperCase() : input;\nconst retryMethods = ['get', 'put', 'head', 'delete', 'options', 'trace'];\nconst retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];\nconst retryAfterStatusCodes = [413, 429, 503];\nconst defaultRetryOptions = {\n    limit: 2,\n    methods: retryMethods,\n    statusCodes: retryStatusCodes,\n    afterStatusCodes: retryAfterStatusCodes,\n    maxRetryAfter: Number.POSITIVE_INFINITY,\n    backoffLimit: Number.POSITIVE_INFINITY,\n    delay: attemptCount => 0.3 * (2 ** (attemptCount - 1)) * 1000,\n};\nconst normalizeRetryOptions = (retry = {}) => {\n    if (typeof retry === 'number') {\n        return {\n            ...defaultRetryOptions,\n            limit: retry,\n        };\n    }\n    if (retry.methods && !Array.isArray(retry.methods)) {\n        throw new Error('retry.methods must be an array');\n    }\n    if (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n        throw new Error('retry.statusCodes must be an array');\n    }\n    return {\n        ...defaultRetryOptions,\n        ...retry,\n        afterStatusCodes: retryAfterStatusCodes,\n    };\n};\n\n// `Promise.race()` workaround (#91)\nasync function timeout(request, init, abortController, options) {\n    return new Promise((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n            if (abortController) {\n                abortController.abort();\n            }\n            reject(new TimeoutError(request));\n        }, options.timeout);\n        void options\n            .fetch(request, init)\n            .then(resolve)\n            .catch(reject)\n            .then(() => {\n            clearTimeout(timeoutId);\n        });\n    });\n}\n\n// https://github.com/sindresorhus/delay/tree/ab98ae8dfcb38e1593286c94d934e70d14a4e111\nasync function delay(ms, { signal }) {\n    return new Promise((resolve, reject) => {\n        if (signal) {\n            signal.throwIfAborted();\n            signal.addEventListener('abort', abortHandler, { once: true });\n        }\n        function abortHandler() {\n            clearTimeout(timeoutId);\n            reject(signal.reason);\n        }\n        const timeoutId = setTimeout(() => {\n            signal?.removeEventListener('abort', abortHandler);\n            resolve();\n        }, ms);\n    });\n}\n\nconst findUnknownOptions = (request, options) => {\n    const unknownOptions = {};\n    for (const key in options) {\n        if (!(key in requestOptionsRegistry) && !(key in kyOptionKeys) && !(key in request)) {\n            unknownOptions[key] = options[key];\n        }\n    }\n    return unknownOptions;\n};\n\nclass Ky {\n    static create(input, options) {\n        const ky = new Ky(input, options);\n        const function_ = async () => {\n            if (typeof ky._options.timeout === 'number' && ky._options.timeout > maxSafeTimeout) {\n                throw new RangeError(`The \\`timeout\\` option cannot be greater than ${maxSafeTimeout}`);\n            }\n            // Delay the fetch so that body method shortcuts can set the Accept header\n            await Promise.resolve();\n            let response = await ky._fetch();\n            for (const hook of ky._options.hooks.afterResponse) {\n                // eslint-disable-next-line no-await-in-loop\n                const modifiedResponse = await hook(ky.request, ky._options, ky._decorateResponse(response.clone()));\n                if (modifiedResponse instanceof globalThis.Response) {\n                    response = modifiedResponse;\n                }\n            }\n            ky._decorateResponse(response);\n            if (!response.ok && ky._options.throwHttpErrors) {\n                let error = new HTTPError(response, ky.request, ky._options);\n                for (const hook of ky._options.hooks.beforeError) {\n                    // eslint-disable-next-line no-await-in-loop\n                    error = await hook(error);\n                }\n                throw error;\n            }\n            // If `onDownloadProgress` is passed, it uses the stream API internally\n            /* istanbul ignore next */\n            if (ky._options.onDownloadProgress) {\n                if (typeof ky._options.onDownloadProgress !== 'function') {\n                    throw new TypeError('The `onDownloadProgress` option must be a function');\n                }\n                if (!supportsResponseStreams) {\n                    throw new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n                }\n                return ky._stream(response.clone(), ky._options.onDownloadProgress);\n            }\n            return response;\n        };\n        const isRetriableMethod = ky._options.retry.methods.includes(ky.request.method.toLowerCase());\n        const result = (isRetriableMethod ? ky._retry(function_) : function_());\n        for (const [type, mimeType] of Object.entries(responseTypes)) {\n            result[type] = async () => {\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                ky.request.headers.set('accept', ky.request.headers.get('accept') || mimeType);\n                const awaitedResult = await result;\n                const response = awaitedResult.clone();\n                if (type === 'json') {\n                    if (response.status === 204) {\n                        return '';\n                    }\n                    const arrayBuffer = await response.clone().arrayBuffer();\n                    const responseSize = arrayBuffer.byteLength;\n                    if (responseSize === 0) {\n                        return '';\n                    }\n                    if (options.parseJson) {\n                        return options.parseJson(await response.text());\n                    }\n                }\n                return response[type]();\n            };\n        }\n        return result;\n    }\n    // eslint-disable-next-line complexity\n    constructor(input, options = {}) {\n        Object.defineProperty(this, \"request\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"abortController\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_retryCount\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_input\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._input = input;\n        const credentials = this._input instanceof Request && 'credentials' in Request.prototype\n            ? this._input.credentials\n            : undefined;\n        this._options = {\n            ...(credentials && { credentials }), // For exactOptionalPropertyTypes\n            ...options,\n            headers: mergeHeaders(this._input.headers, options.headers),\n            hooks: deepMerge({\n                beforeRequest: [],\n                beforeRetry: [],\n                beforeError: [],\n                afterResponse: [],\n            }, options.hooks),\n            method: normalizeRequestMethod(options.method ?? this._input.method),\n            // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n            prefixUrl: String(options.prefixUrl || ''),\n            retry: normalizeRetryOptions(options.retry),\n            throwHttpErrors: options.throwHttpErrors !== false,\n            timeout: options.timeout ?? 10_000,\n            fetch: options.fetch ?? globalThis.fetch.bind(globalThis),\n        };\n        if (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {\n            throw new TypeError('`input` must be a string, URL, or Request');\n        }\n        if (this._options.prefixUrl && typeof this._input === 'string') {\n            if (this._input.startsWith('/')) {\n                throw new Error('`input` must not begin with a slash when using `prefixUrl`');\n            }\n            if (!this._options.prefixUrl.endsWith('/')) {\n                this._options.prefixUrl += '/';\n            }\n            this._input = this._options.prefixUrl + this._input;\n        }\n        if (supportsAbortController) {\n            this.abortController = new globalThis.AbortController();\n            if (this._options.signal) {\n                const originalSignal = this._options.signal;\n                this._options.signal.addEventListener('abort', () => {\n                    this.abortController.abort(originalSignal.reason);\n                });\n            }\n            this._options.signal = this.abortController.signal;\n        }\n        if (supportsRequestStreams) {\n            // @ts-expect-error - Types are outdated.\n            this._options.duplex = 'half';\n        }\n        this.request = new globalThis.Request(this._input, this._options);\n        if (this._options.searchParams) {\n            // eslint-disable-next-line unicorn/prevent-abbreviations\n            const textSearchParams = typeof this._options.searchParams === 'string'\n                ? this._options.searchParams.replace(/^\\?/, '')\n                : new URLSearchParams(this._options.searchParams).toString();\n            // eslint-disable-next-line unicorn/prevent-abbreviations\n            const searchParams = '?' + textSearchParams;\n            const url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n            // To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n            if (((supportsFormData && this._options.body instanceof globalThis.FormData)\n                || this._options.body instanceof URLSearchParams) && !(this._options.headers && this._options.headers['content-type'])) {\n                this.request.headers.delete('content-type');\n            }\n            // The spread of `this.request` is required as otherwise it misses the `duplex` option for some reason and throws.\n            this.request = new globalThis.Request(new globalThis.Request(url, { ...this.request }), this._options);\n        }\n        if (this._options.json !== undefined) {\n            this._options.body = JSON.stringify(this._options.json);\n            this.request.headers.set('content-type', this._options.headers.get('content-type') ?? 'application/json');\n            this.request = new globalThis.Request(this.request, { body: this._options.body });\n        }\n    }\n    _calculateRetryDelay(error) {\n        this._retryCount++;\n        if (this._retryCount <= this._options.retry.limit && !(error instanceof TimeoutError)) {\n            if (error instanceof HTTPError) {\n                if (!this._options.retry.statusCodes.includes(error.response.status)) {\n                    return 0;\n                }\n                const retryAfter = error.response.headers.get('Retry-After');\n                if (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n                    let after = Number(retryAfter);\n                    if (Number.isNaN(after)) {\n                        after = Date.parse(retryAfter) - Date.now();\n                    }\n                    else {\n                        after *= 1000;\n                    }\n                    if (this._options.retry.maxRetryAfter !== undefined && after > this._options.retry.maxRetryAfter) {\n                        return 0;\n                    }\n                    return after;\n                }\n                if (error.response.status === 413) {\n                    return 0;\n                }\n            }\n            const retryDelay = this._options.retry.delay(this._retryCount);\n            return Math.min(this._options.retry.backoffLimit, retryDelay);\n        }\n        return 0;\n    }\n    _decorateResponse(response) {\n        if (this._options.parseJson) {\n            response.json = async () => this._options.parseJson(await response.text());\n        }\n        return response;\n    }\n    async _retry(function_) {\n        try {\n            return await function_();\n        }\n        catch (error) {\n            const ms = Math.min(this._calculateRetryDelay(error), maxSafeTimeout);\n            if (ms !== 0 && this._retryCount > 0) {\n                await delay(ms, { signal: this._options.signal });\n                for (const hook of this._options.hooks.beforeRetry) {\n                    // eslint-disable-next-line no-await-in-loop\n                    const hookResult = await hook({\n                        request: this.request,\n                        options: this._options,\n                        error: error,\n                        retryCount: this._retryCount,\n                    });\n                    // If `stop` is returned from the hook, the retry process is stopped\n                    if (hookResult === stop) {\n                        return;\n                    }\n                }\n                return this._retry(function_);\n            }\n            throw error;\n        }\n    }\n    async _fetch() {\n        for (const hook of this._options.hooks.beforeRequest) {\n            // eslint-disable-next-line no-await-in-loop\n            const result = await hook(this.request, this._options);\n            if (result instanceof Request) {\n                this.request = result;\n                break;\n            }\n            if (result instanceof Response) {\n                return result;\n            }\n        }\n        const nonRequestOptions = findUnknownOptions(this.request, this._options);\n        if (this._options.timeout === false) {\n            return this._options.fetch(this.request.clone(), nonRequestOptions);\n        }\n        return timeout(this.request.clone(), nonRequestOptions, this.abortController, this._options);\n    }\n    /* istanbul ignore next */\n    _stream(response, onDownloadProgress) {\n        const totalBytes = Number(response.headers.get('content-length')) || 0;\n        let transferredBytes = 0;\n        if (response.status === 204) {\n            if (onDownloadProgress) {\n                onDownloadProgress({ percent: 1, totalBytes, transferredBytes }, new Uint8Array());\n            }\n            return new globalThis.Response(null, {\n                status: response.status,\n                statusText: response.statusText,\n                headers: response.headers,\n            });\n        }\n        return new globalThis.Response(new globalThis.ReadableStream({\n            async start(controller) {\n                const reader = response.body.getReader();\n                if (onDownloadProgress) {\n                    onDownloadProgress({ percent: 0, transferredBytes: 0, totalBytes }, new Uint8Array());\n                }\n                async function read() {\n                    const { done, value } = await reader.read();\n                    if (done) {\n                        controller.close();\n                        return;\n                    }\n                    if (onDownloadProgress) {\n                        transferredBytes += value.byteLength;\n                        const percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n                        onDownloadProgress({ percent, transferredBytes, totalBytes }, value);\n                    }\n                    controller.enqueue(value);\n                    await read();\n                }\n                await read();\n            },\n        }), {\n            status: response.status,\n            statusText: response.statusText,\n            headers: response.headers,\n        });\n    }\n}\n\n/*! MIT License © Sindre Sorhus */\nconst createInstance = (defaults) => {\n    // eslint-disable-next-line @typescript-eslint/promise-function-async\n    const ky = (input, options) => Ky.create(input, validateAndMerge(defaults, options));\n    for (const method of requestMethods) {\n        // eslint-disable-next-line @typescript-eslint/promise-function-async\n        ky[method] = (input, options) => Ky.create(input, validateAndMerge(defaults, options, { method }));\n    }\n    ky.create = (newDefaults) => createInstance(validateAndMerge(newDefaults));\n    ky.extend = (newDefaults) => createInstance(validateAndMerge(defaults, newDefaults));\n    ky.stop = stop;\n    return ky;\n};\nconst ky$1 = createInstance();\n\nvar distribution = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tHTTPError: HTTPError,\n\tTimeoutError: TimeoutError,\n\tdefault: ky$1\n});\n\nvar require$$2 = /*@__PURE__*/getAugmentedNamespace(distribution);\n\nconst ENDPOINT = {\n  FREE: 'https://api.microlink.io/',\n  PRO: 'https://pro.microlink.io/'\n};\n\nconst isObject = input => input !== null && typeof input === 'object';\n\nconst isBuffer = input =>\n  input != null &&\n  input.constructor != null &&\n  typeof input.constructor.isBuffer === 'function' &&\n  input.constructor.isBuffer(input);\n\nconst parseBody = (input, error, url) => {\n  try {\n    return JSON.parse(input)\n  } catch (_) {\n    const message = input || error.message;\n\n    return {\n      status: 'error',\n      data: { url: message },\n      more: 'https://microlink.io/efatalclient',\n      code: 'EFATALCLIENT',\n      message,\n      url\n    }\n  }\n};\n\nconst factory$1 = streamResponseType => ({\n  VERSION,\n  MicrolinkError,\n  urlHttp,\n  got,\n  flatten\n}) => {\n  const assertUrl = (url = '') => {\n    if (!urlHttp(url)) {\n      const message = `The \\`url\\` as \\`${url}\\` is not valid. Ensure it has protocol (http or https) and hostname.`;\n      throw new MicrolinkError({\n        status: 'fail',\n        data: { url: message },\n        more: 'https://microlink.io/einvalurlclient',\n        code: 'EINVALURLCLIENT',\n        message,\n        url\n      })\n    }\n  };\n\n  const mapRules = rules => {\n    if (!isObject(rules)) return\n    const flatRules = flatten(rules);\n    return Object.keys(flatRules).reduce((acc, key) => {\n      acc[`data.${key}`] = flatRules[key].toString();\n      return acc\n    }, {})\n  };\n\n  const fetchFromApi = async (apiUrl, opts = {}) => {\n    try {\n      const response = await got(apiUrl, opts);\n      return opts.responseType === streamResponseType\n        ? response\n        : { ...response.body, response }\n    } catch (error) {\n      const { response = {} } = error;\n      const {\n        statusCode,\n        body: rawBody,\n        headers = {},\n        url: uri = apiUrl\n      } = response;\n      const isBodyBuffer = isBuffer(rawBody);\n\n      const body =\n        isObject(rawBody) && !isBodyBuffer\n          ? rawBody\n          : parseBody(isBodyBuffer ? rawBody.toString() : rawBody, error, uri);\n\n      throw new MicrolinkError({\n        ...body,\n        message: body.message,\n        url: uri,\n        statusCode,\n        headers\n      })\n    }\n  };\n\n  const getApiUrl = (\n    url,\n    { data, apiKey, endpoint, retry, cache, ...opts } = {},\n    { responseType = 'json', headers: gotHeaders, ...gotOpts } = {}\n  ) => {\n    const isPro = !!apiKey;\n    const apiEndpoint = endpoint || ENDPOINT[isPro ? 'PRO' : 'FREE'];\n\n    const apiUrl = `${apiEndpoint}?${new URLSearchParams({\n      url,\n      ...mapRules(data),\n      ...flatten(opts)\n    }).toString()}`;\n\n    const headers = isPro\n      ? { ...gotHeaders, 'x-api-key': apiKey }\n      : { ...gotHeaders };\n\n    if (opts.stream) {\n      responseType = streamResponseType;\n    }\n    return [apiUrl, { ...gotOpts, responseType, cache, retry, headers }]\n  };\n\n  const createMql = defaultOpts => async (url, opts, gotOpts) => {\n    assertUrl(url);\n    const [apiUrl, fetchOpts] = getApiUrl(url, opts, {\n      ...defaultOpts,\n      ...gotOpts\n    });\n    return fetchFromApi(apiUrl, fetchOpts)\n  };\n\n  const mql = createMql();\n  mql.extend = createMql;\n  mql.MicrolinkError = MicrolinkError;\n  mql.getApiUrl = getApiUrl;\n  mql.fetchFromApi = fetchFromApi;\n  mql.mapRules = mapRules;\n  mql.version = VERSION;\n  mql.stream = got.stream;\n\n  return mql\n};\n\nvar factory_1 = factory$1;\n\nconst urlHttp = lightweight$1;\nconst { flattie: flatten } = dist;\nconst { default: ky } = require$$2;\n\nconst factory = factory_1('arrayBuffer');\n\nclass MicrolinkError extends Error {\n  constructor (props) {\n    super();\n    this.name = 'MicrolinkError';\n    Object.assign(this, props);\n    this.description = this.message;\n    this.message = this.code\n      ? `${this.code}, ${this.description}`\n      : this.description;\n  }\n}\n\nconst got = async (url, { responseType, ...opts }) => {\n  try {\n    if (opts.timeout === undefined) opts.timeout = false;\n    const response = await ky(url, opts);\n    const body = await response[responseType]();\n    const { headers, status: statusCode } = response;\n    return { url: response.url, body, headers, statusCode }\n  } catch (error) {\n    if (error.response) {\n      const { response } = error;\n      error.response = {\n        ...response,\n        headers: Array.from(response.headers.entries()).reduce(\n          (acc, [key, value]) => {\n            acc[key] = value;\n            return acc\n          },\n          {}\n        ),\n        statusCode: response.status,\n        body: await response.text()\n      };\n    }\n    throw error\n  }\n};\n\ngot.stream = (...args) => ky(...args).then(res => res.body);\n\nconst mql = factory({\n  MicrolinkError,\n  urlHttp,\n  got,\n  flatten,\n  VERSION: '0.13.6'\n});\n\nlightweight$2.exports = mql;\nvar arrayBuffer = lightweight$2.exports.arrayBuffer = mql.extend({ responseType: 'arrayBuffer' });\nvar extend = lightweight$2.exports.extend = mql.extend;\nvar fetchFromApi = lightweight$2.exports.fetchFromApi = mql.fetchFromApi;\nvar getApiUrl = lightweight$2.exports.getApiUrl = mql.getApiUrl;\nvar mapRules = lightweight$2.exports.mapRules = mql.mapRules;\nvar MicrolinkError_1 = lightweight$2.exports.MicrolinkError = mql.MicrolinkError;\nvar version = lightweight$2.exports.version = mql.version;\n\nvar lightweightExports = lightweight$2.exports;\nvar lightweight = /*@__PURE__*/getDefaultExportFromCjs(lightweightExports);\n\nexport { MicrolinkError_1 as MicrolinkError, arrayBuffer, lightweight as default, extend, fetchFromApi, getApiUrl, mapRules, version };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}